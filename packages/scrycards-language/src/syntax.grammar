@top Program { expression }

expression {
  (statement ~id (space expression)?) |
  (statement Clause) |
  (Clause ~id space? expression) |
  (Clause)
}

Clause { "(" space? expression ~id space? ")" }

statement { Tag ~tag | conjunction | (Prefix? Argument) ~tag } // todo: distinguish between and Name and Argument (should be name here)

conjunction { And | Or }

Tag { Prefix? Argument Operator Value }

Value {
    String |
    Number |
    StringLiteral |
    RegExp
}


@tokens {
    @precedence { And, Or, Prefix }
    @precedence { And, Or, Argument }
    @precedence { Number, StringLiteral, RegExp, String }

    Prefix { "!" | "-" }

    And { "and" }
    Or { "or" }

    Argument { $[a-zA-Z]+ }

    Number { $[0-9]+ ("." $[0-9]+)? }

    // Name { $[a-zA-Z0-9"']+ } // having trouble distinguishing from the start of an argument and name

    String { $[a-zA-Z0-9"'_;:\-\.]+ }

    Operator { ":" | "=" | "<" | ">" | "<=" | ">=" | "!=" }

    StringLiteral { '"' (!["\\] | "\\" _)* '"' }

    RegExp { '/' (![/\\] | "\\" _)* '/' } // this is copied from the string definition, todo fix to work with /RegExp/

    space { $[ \t\n\r]+ }

    "(" ")"
}

@detectDelim
